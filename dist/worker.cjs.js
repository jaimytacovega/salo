"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const p=async({callback:e,signal:a,priority:n})=>{var r;try{return(r=self==null?void 0:self.scheduler)!=null&&r.postTask?{data:await scheduler.postTask(e,{priority:n,signal:a})}:{data:await e()}}catch(t){return{err:t}}},d=({callbacks:e,headers:a,status:n})=>{const{readable:r,writable:t}=new TransformStream;return{done:(async()=>{var c;for(const l of e){const i=new AbortController,o=await p({callback:l,signal:i.signal,priority:"background"}),f=(o==null?void 0:o.err)??(o==null?void 0:o.data);await((c=new Response(f,{headers:a}).body)==null?void 0:c.pipeTo(t,{preventClose:!0})),i.abort()}t.getWriter().close()})(),response:new Response(r,{headers:a,status:n??200})}},w=async({url:e,request:a,...n})=>{var r;try{const t=await((r=self==null?void 0:self.fetch(e||a,n))==null?void 0:r.catch(s=>({err:s})));return t!=null&&t.err?t:{response:t}}catch(t){return{err:t}}};exports.fetch=w;exports.stream=d;
